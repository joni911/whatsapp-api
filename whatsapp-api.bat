@echo off\r\nREM WhatsApp API Management Script for Windows\r\nREM This script helps manage the WhatsApp API service on Windows\r\n\r\nsetlocal enabledelayedexpansion\r\n\r\nREM Color codes for output (using PowerShell)\r\nset \"BLUE=[INFO]\"\r\nset \"GREEN=[SUCCESS]\"\r\nset \"YELLOW=[WARNING]\"\r\nset \"RED=[ERROR]\"\r\n\r\nREM Function to print colored output using PowerShell\r\n:print_status\r\npowershell write-host -foregroundcolor Cyan \"[%~1] %~2\"\r\nexit /b\r\n\r\n:print_success\r\npowershell write-host -foregroundcolor Green \"[%~1] %~2\"\r\nexit /b\r\n\r\n:print_warning\r\npowershell write-host -foregroundcolor Yellow \"[%~1] %~2\"\r\nexit /b\r\n\r\n:print_error\r\npowershell write-host -foregroundcolor Red \"[%~1] %~2\"\r\nexit /b\r\n\r\nREM Check if Docker is installed\r\n:check_docker\r\nwhere docker >nul 2>&1\r\nif %errorlevel% == 0 (\r\n    call :print_success \"SUCCESS\" \"Docker is installed\"\r\n    exit /b 0\r\n) else (\r\n    call :print_error \"ERROR\" \"Docker is not installed\"\r\n    exit /b 1\r\n)\r\n\r\nREM Check if Docker Compose is installed\r\n:check_docker_compose\r\nwhere docker-compose >nul 2>&1\r\nif %errorlevel% == 0 (\r\n    call :print_success \"SUCCESS\" \"Docker Compose is installed\"\r\n    exit /b 0\r\n) else (\r\n    call :print_error \"ERROR\" \"Docker Compose is not installed\"\r\n    exit /b 1\r\n)\r\n\r\nREM Check if Node.js is installed\r\n:check_node\r\nwhere node >nul 2>&1\r\nif %errorlevel% == 0 (\r\n    for /f \"tokens=*\" %%i in ('node --version') do set NODE_VERSION=%%i\r\n    call :print_success \"SUCCESS\" \"Node.js !NODE_VERSION! is installed\"\r\n    exit /b 0\r\n) else (\r\n    call :print_error \"ERROR\" \"Node.js is not installed\"\r\n    exit /b 1\r\n)\r\n\r\nREM Check if PM2 is installed\r\n:check_pm2\r\nwhere pm2 >nul 2>&1\r\nif %errorlevel% == 0 (\r\n    for /f \"tokens=*\" %%i in ('pm2 --version') do set PM2_VERSION=%%i\r\n    call :print_success \"SUCCESS\" \"PM2 !PM2_VERSION! is installed\"\r\n    exit /b 0\r\n) else (\r\n    call :print_warning \"WARNING\" \"PM2 is not installed (recommended for production)\"\r\n    exit /b 1\r\n)\r\n\r\nREM Start the service with Docker\r\n:start_docker\r\ncall :print_status \"INFO\" \"Starting WhatsApp API with Docker...\"\r\n\r\ncall :check_docker\r\nif !errorlevel! neq 0 (\r\n    call :print_error \"ERROR\" \"Docker is not installed. Cannot start with Docker.\"\r\n    exit /b 1\r\n)\r\n\r\ncall :check_docker_compose\r\nif !errorlevel! neq 0 (\r\n    call :print_error \"ERROR\" \"Docker Compose is not installed. Cannot start with Docker.\"\r\n    exit /b 1\r\n)\r\n\r\nif exist docker-compose.yml (\r\n    docker-compose pull\r\n    docker-compose up -d\r\n    if !errorlevel! equ 0 (\r\n        call :print_success \"SUCCESS\" \"WhatsApp API started successfully with Docker\"\r\n        call :print_status \"INFO\" \"Service is running on port 3000\"\r\n        docker-compose ps\r\n    ) else (\r\n        call :print_error \"ERROR\" \"Failed to start WhatsApp API with Docker\"\r\n        exit /b 1\r\n    )\r\n) else (\r\n    call :print_error \"ERROR\" \"docker-compose.yml not found\"\r\n    exit /b 1\r\n)\r\nexit /b\r\n\r\nREM Stop the Docker service\r\n:stop_docker\r\ncall :print_status \"INFO\" \"Stopping WhatsApp API Docker service...\"\r\n\r\nif exist docker-compose.yml (\r\n    docker-compose down\r\n    if !errorlevel! equ 0 (\r\n        call :print_success \"SUCCESS\" \"WhatsApp API Docker service stopped successfully\"\r\n    ) else (\r\n        call :print_error \"ERROR\" \"Failed to stop WhatsApp API Docker service\"\r\n        exit /b 1\r\n    )\r\n) else (\r\n    call :print_error \"ERROR\" \"docker-compose.yml not found\"\r\n    exit /b 1\r\n)\r\nexit /b\r\n\r\nREM View Docker logs\r\n:logs_docker\r\ncall :print_status \"INFO\" \"Viewing Docker logs...\"\r\n\r\nif exist docker-compose.yml (\r\n    docker-compose logs -f\r\n) else (\r\n    call :print_error \"ERROR\" \"docker-compose.yml not found\"\r\n    exit /b 1\r\n)\r\nexit /b\r\n\r\nREM Start the service directly\r\n:start_direct\r\ncall :print_status \"INFO\" \"Starting WhatsApp API directly...\"\r\n\r\ncall :check_node\r\nif !errorlevel! neq 0 (\r\n    call :print_error \"ERROR\" \"Node.js is not installed. Cannot start service directly.\"\r\n    exit /b 1\r\n)\r\n\r\nif exist server.js (\r\n    where pm2 >nul 2>&1\r\n    if !errorlevel! equ 0 (\r\n        pm2 start server.js --name whatsapp-api\r\n        if !errorlevel! equ 0 (\r\n            call :print_success \"SUCCESS\" \"WhatsApp API started successfully with PM2\"\r\n            pm2 list\r\n        ) else (\r\n            call :print_error \"ERROR\" \"Failed to start WhatsApp API with PM2\"\r\n            exit /b 1\r\n        )\r\n    ) else (\r\n        call :print_warning \"WARNING\" \"PM2 not found, starting with Node.js directly (not recommended for production)\"\r\n        start \"WhatsApp API\" /B node server.js\r\n        if !errorlevel! equ 0 (\r\n            call :print_success \"SUCCESS\" \"WhatsApp API started successfully with Node.js\"\r\n        ) else (\r\n            call :print_error \"ERROR\" \"Failed to start WhatsApp API with Node.js\"\r\n            exit /b 1\r\n        )\r\n    )\r\n) else (\r\n    call :print_error \"ERROR\" \"server.js not found\"\r\n    exit /b 1\r\n)\r\nexit /b\r\n\r\nREM Stop the direct service\r\n:stop_direct\r\ncall :print_status \"INFO\" \"Stopping WhatsApp API direct service...\"\r\n\r\nwhere pm2 >nul 2>&1\r\nif !errorlevel! equ 0 (\r\n    pm2 stop whatsapp-api\r\n    if !errorlevel! equ 0 (\r\n        call :print_success \"SUCCESS\" \"WhatsApp API stopped successfully with PM2\"\r\n    ) else (\r\n        call :print_error \"ERROR\" \"Failed to stop WhatsApp API with PM2\"\r\n        exit /b 1\r\n    )\r\n) else (\r\n    call :print_error \"ERROR\" \"PM2 not found. If you started the service directly with Node.js, you'll need to kill the process manually.\"\r\n    exit /b 1\r\n)\r\nexit /b\r\n\r\nREM View direct logs\r\n:logs_direct\r\ncall :print_status \"INFO\" \"Viewing direct logs...\"\r\n\r\nwhere pm2 >nul 2>&1\r\nif !errorlevel! equ 0 (\r\n    pm2 logs whatsapp-api\r\n) else (\r\n    call :print_error \"ERROR\" \"PM2 not found. Checking for log files...\"\r\n    if exist \"sessions\\message_log.txt\" (\r\n        powershell get-content \"sessions\\message_log.txt\" -wait\r\n    ) else (\r\n        call :print_error \"ERROR\" \"No log files found\"\r\n        exit /b 1\r\n    )\r\n)\r\nexit /b\r\n\r\nREM Check service status\r\n:status\r\ncall :print_status \"INFO\" \"Checking service status...\"\r\n\r\nREM Check Docker status\r\nwhere docker >nul 2>&1\r\nif !errorlevel! equ 0 (\r\n    where docker-compose >nul 2>&1\r\n    if !errorlevel! equ 0 (\r\n        if exist docker-compose.yml (\r\n            call :print_status \"INFO\" \"Docker service status:\"\r\n            docker-compose ps\r\n        )\r\n    )\r\n)\r\n\r\nREM Check direct service status\r\nwhere pm2 >nul 2>&1\r\nif !errorlevel! equ 0 (\r\n    call :print_status \"INFO\" \"PM2 service status:\"\r\n    pm2 list\r\n)\r\n\r\nREM Check if port 3000 is in use\r\nnetstat -an | findstr :3000 >nul\r\nif !errorlevel! equ 0 (\r\n    call :print_success \"SUCCESS\" \"Service appears to be running on port 3000\"\r\n) else (\r\n    call :print_warning \"WARNING\" \"No service found running on port 3000\"\r\n)\r\nexit /b\r\n\r\nREM Restart the service\r\n:restart\r\ncall :print_status \"INFO\" \"Restarting service...\"\r\n\r\nREM Try Docker first\r\nwhere docker >nul 2>&1\r\nif !errorlevel! equ 0 (\r\n    where docker-compose >nul 2>&1\r\n    if !errorlevel! equ 0 (\r\n        if exist docker-compose.yml (\r\n            call :stop_docker\r\n            timeout /t 3 /nobreak >nul\r\n            call :start_docker\r\n            exit /b\r\n        )\r\n    )\r\n)\r\n\r\nwhere pm2 >nul 2>&1\r\nif !errorlevel! equ 0 (\r\n    call :stop_direct\r\n    timeout /t 3 /nobreak >nul\r\n    call :start_direct\r\n    exit /b\r\n)\r\n\r\ncall :print_error \"ERROR\" \"No service management method found\"\r\nexit /b 1\r\n\r\nREM Show help\r\n:show_help\r\necho WhatsApp API Management Script for Windows\r\necho Usage: %~nx0 [command]\r\necho.\r\necho Commands:\r\necho   start     Start the WhatsApp API service\r\necho   stop      Stop the WhatsApp API service\r\necho   restart   Restart the WhatsApp API service\r\necho   status    Check the service status\r\necho   logs      View service logs\r\necho   check     Check system requirements\r\necho   help      Show this help message\r\necho.\r\necho Examples:\r\necho   %~nx0 start    Start the service\r\necho   %~nx0 logs     View logs\r\necho   %~nx0 status   Check service status\r\nexit /b\r\n\r\nREM Check system requirements\r\n:check_requirements\r\ncall :print_status \"INFO\" \"Checking system requirements...\"\r\n\r\ncall :check_node\r\ncall :check_docker\r\ncall :check_docker_compose\r\ncall :check_pm2\r\n\r\ncall :print_status \"INFO\" \"Checking for required files...\"\r\n\r\nif exist \".env.example\" (\r\n    call :print_success \"SUCCESS\" \".env.example found\"\r\n) else (\r\n    call :print_warning \"WARNING\" \".env.example not found\"\r\n)\r\n\r\nif exist \"docker-compose.yml\" (\r\n    call :print_success \"SUCCESS\" \"docker-compose.yml found\"\r\n) else (\r\n    call :print_warning \"WARNING\" \"docker-compose.yml not found\"\r\n)\r\n\r\nif exist \"server.js\" (\r\n    call :print_success \"SUCCESS\" \"server.js found\"\r\n) else (\r\n    call :print_error \"ERROR\" \"server.js not found\"\r\n)\r\n\r\ncall :print_status \"INFO\" \"Checking directory permissions...\"\r\n\r\nREM Simple check - try to create a temp file\r\necho. > temp_check.txt 2>nul\r\nif !errorlevel! equ 0 (\r\n    del temp_check.txt >nul 2>&1\r\n    call :print_success \"SUCCESS\" \"Current directory is writable\"\r\n) else (\r\n    call :print_error \"ERROR\" \"Current directory is not writable\"\r\n)\r\n\r\nif exist \"sessions\" (\r\n    echo. > \"sessions\\temp_check.txt\" 2>nul\r\n    if !errorlevel! equ 0 (\r\n        del \"sessions\\temp_check.txt\" >nul 2>&1\r\n        call :print_success \"SUCCESS\" \"sessions directory is writable\"\r\n    ) else (\r\n        call :print_error \"ERROR\" \"sessions directory is not writable\"\r\n    )\r\n) else (\r\n    call :print_warning \"WARNING\" \"sessions directory not found (will be created on first run)\"\r\n)\r\nexit /b\r\n\r\nREM Main script logic\r\nif \"%1\" == \"\" (\r\n    call :show_help\r\n    exit /b\r\n)\r\n\r\nif \"%1\" == \"start\" (\r\n    if \"%2\" == \"docker\" (\r\n        call :start_docker\r\n    ) else if \"%2\" == \"direct\" (\r\n        call :start_direct\r\n    ) else (\r\n        REM Default to Docker if available, otherwise direct\r\n        where docker >nul 2>&1\r\n        if !errorlevel! equ 0 (\r\n            where docker-compose >nul 2>&1\r\n            if !errorlevel! equ 0 (\r\n                if exist docker-compose.yml (\r\n                    call :start_docker\r\n                    exit /b\r\n                )\r\n            )\r\n        )\r\n        where node >nul 2>&1\r\n        if !errorlevel! equ 0 (\r\n            if exist server.js (\r\n                call :start_direct\r\n                exit /b\r\n            )\r\n        )\r\n        call :print_error \"ERROR\" \"No suitable method found to start the service\"\r\n        exit /b 1\r\n    )\r\n) else if \"%1\" == \"stop\" (\r\n    if \"%2\" == \"docker\" (\r\n        call :stop_docker\r\n    ) else if \"%2\" == \"direct\" (\r\n        call :stop_direct\r\n    ) else (\r\n        REM Try to detect which method was used\r\n        where docker >nul 2>&1\r\n        if !errorlevel! equ 0 (\r\n            where docker-compose >nul 2>&1\r\n            if !errorlevel! equ 0 (\r\n                if exist docker-compose.yml (\r\n                    call :stop_docker\r\n                    exit /b\r\n                )\r\n            )\r\n        )\r\n        where pm2 >nul 2>&1\r\n        if !errorlevel! equ 0 (\r\n            call :stop_direct\r\n            exit /b\r\n        )\r\n        call :print_error \"ERROR\" \"No suitable method found to stop the service\"\r\n        exit /b 1\r\n    )\r\n) else if \"%1\" == \"logs\" (\r\n    if \"%2\" == \"docker\" (\r\n        call :logs_docker\r\n    ) else if \"%2\" == \"direct\" (\r\n        call :logs_direct\r\n    ) else (\r\n        REM Try to detect which method was used\r\n        where docker >nul 2>&1\r\n        if !errorlevel! equ 0 (\r\n            where docker-compose >nul 2>&1\r\n            if !errorlevel! equ 0 (\r\n                if exist docker-compose.yml (\r\n                    call :logs_docker\r\n                    exit /b\r\n                )\r\n            )\r\n        )\r\n        where pm2 >nul 2>&1\r\n        if !errorlevel! equ 0 (\r\n            call :logs_direct\r\n            exit /b\r\n        )\r\n        if exist \"sessions\\message_log.txt\" (\r\n            call :logs_direct\r\n            exit /b\r\n        )\r\n        call :print_error \"ERROR\" \"No suitable method found to view logs\"\r\n        exit /b 1\r\n    )\r\n) else if \"%1\" == \"restart\" (\r\n    call :restart\r\n) else if \"%1\" == \"status\" (\r\n    call :status\r\n) else if \"%1\" == \"check\" (\r\n    call :check_requirements\r\n) else if \"%1\" == \"help\" (\r\n    call :show_help\r\n) else (\r\n    call :show_help\r\n)